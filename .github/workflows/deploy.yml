name: Deploy Q-Learning App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Smoke test imports
        run: |
          python - << 'PY'
          import importlib
          for m in ["tic_tac_toe_env", "q_learning_agent", "training_system"]:
              importlib.import_module(m)
          print("✅ imports OK")
          PY

  deploy-railway:
    needs: test
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main'"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node (for Railway CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Login + Link project + Deploy
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}          # create in: Settings → Secrets and variables → Actions
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }} # copy from Railway → Project → Settings → Project ID
          SERVICE_NAME: q-learning-tictactoe                    # change if your service name differs
        run: |
          set -e
          railway login --token "$RAILWAY_TOKEN"
          railway link --project "$RAILWAY_PROJECT_ID"
          # if you have multiple services, specify one explicitly:
          railway up --service "$SERVICE_NAME" --ci --detach

  deploy-render:
    needs: test
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main' && secrets.RENDER_SERVICE_ID != '' && secrets.RENDER_API_KEY != ''"
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}  # optional: only runs if secrets exist
          api-key: ${{ secrets.RENDER_API_KEY }}
